// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model DigitalAgreement {
  id            Int      @id @default(autoincrement())
  user          User     @relation(fields: [userId], references: [id])
  userId        Int
  agreementText String
  signature     String
  createdAt     DateTime @default(now())
}
model AgreementLink {
  id        Int      @id @default(autoincrement())
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  link      String   @unique
  isValid   Boolean  @default(true)
  createdAt DateTime @default(now())
  expiresAt DateTime
}
model Notification {
  id        Int      @id @default(autoincrement())
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  message   String
  createdAt DateTime @default(now())
  read      Boolean  @default(false)
}

model User {
  id            Int         @id @default(autoincrement())
  name          String?
  email         String      @unique
  isAdmin       Boolean     @default(false)
  password      String
  digitalAgreements DigitalAgreement[]
  posts         Post[]
  affiliate     Affiliate?
  referredBy    Referral?   @relation("ReferredUser")
  agreementLinks AgreementLink[]
  notifications  Notification[]
}

model Post {
  id        Int      @id @default(autoincrement())
  title     String
  content   String
  slug      String   @unique
  author    User     @relation(fields: [authorId], references: [id])
  imageUrl  String?
  authorId  Int
  views     Int      @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Affiliate {
  id             Int        @id @default(autoincrement())
  user           User       @relation(fields: [userId], references: [id])
  userId         Int        @unique
  affiliateCode  String     @unique
  referralLink   String     @unique
  commissionRate Float
  totalClicks    Int        @default(0)
  createdAt      DateTime   @default(now())
  referrals      Referral[]
  commissions    Commission[]
  referralClicks ReferralClick[]
}

model ReferralClick {
  id          Int       @id @default(autoincrement())
  affiliate   Affiliate @relation(fields: [affiliateId], references: [id])
  affiliateId Int
  clickedAt   DateTime
}

model Referral {
  id             Int       @id @default(autoincrement())
  affiliate      Affiliate @relation(fields: [affiliateId], references: [id])
  affiliateId    Int
  referredUser   User      @relation("ReferredUser", fields: [referredUserId], references: [id])
  referredUserId Int       @unique
  status         String
  createdAt      DateTime  @default(now())
  completedAt    DateTime?
}

model Commission {
  id          Int       @id @default(autoincrement())
  affiliate   Affiliate @relation(fields: [affiliateId], references: [id])
  affiliateId Int
  amount      Float
  status      String
  createdAt   DateTime  @default(now())
}
model Subscriber {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}